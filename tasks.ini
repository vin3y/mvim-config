[file-build]
# Using clang++ with modern C++ support and warnings
command=clang++ -std=c++17 -Wall -Wextra -Wpedantic "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)"
# Add sanitizers for better error detection
command:debug=clang++ -std=c++17 -Wall -Wextra -Wpedantic -g -fsanitize=address,undefined "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)"
cwd=$(VIM_FILEDIR)
output=quickfix
save=2

[file-run]
command="$(VIM_FILEDIR)/$(VIM_FILENOEXT)"
cwd=$(VIM_FILEDIR)
output=terminal

[project-build]
# CMake with Clang
command=cmake -B build -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_EXPORT_COMPILE_COMMANDS=1 && cmake --build build
command:debug=cmake -B build -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=1 && cmake --build build
cwd=$(VIM_ROOT)
output=quickfix
save=2

[project-run]
command=./build/$(VIM_ROOT_NAME)
cwd=$(VIM_ROOT)
output=terminal

[project-clean]
command=rm -rf build/
cwd=$(VIM_ROOT)
output=terminal

[lint]
# Run clang-tidy
command=clang-tidy "$(VIM_FILEPATH)" -checks=*,-fuchsia-*,-google-*,-zircon-*,-abseil-*,-modernize-use-trailing-return-type,-llvm-*,-llvmlibc-* -- -std=c++17
cwd=$(VIM_FILEDIR)
output=quickfix

[format]
# Run clang-format
command=clang-format -i -style=file "$(VIM_FILEPATH)"
cwd=$(VIM_FILEDIR)
output=none
save=2
      